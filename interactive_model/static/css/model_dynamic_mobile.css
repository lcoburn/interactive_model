/* nav.model {
    display: flex;
    justify-content: space-between;
    color: white;
    z-index: 2;
    position: absolute;
    padding: 2rem;
    top: 0;
} */

/* nav a.model {
    text-decoration: none;
    color: white;
    font-weight: bold;
    padding-right: 15rem;
} */

/* nav ul.model {
    list-style: none;
    display: flex;
    gap: 4rem;
} */

.container-fluid {
    background-color: black;
    width: 90%;
}
.logo {
    position: absolute;
    top: 10px; /* Adjust as necessary */
    right: 0px; /* Adjust as necessary */
    width: 60px; /* Set to desired width */
    height: auto; /* Keep the logo's aspect ratio */
    z-index: 1000; /* Ensure the logo is on top */
}

.title {
    z-index: 2;
    position: absolute;
    font-size: 3rem;
    left: 50%;
    top: 75%;
    transform: translate(-50%, -75%);
}

h4 {
    /* margin: 00px 0; adjust as needed */
    padding-bottom: 10px;
}

#gui {
    /* position: absolute;
    top: 2px;
    left: 2px; */
}
.legend {
    /* border-radius: 10px; */
    padding: 0px;
    display: flex;
    align-items: flex-start; /* Align items to the top of the flex container */
    padding-bottom: 0px;
    padding-right: 100px;
    flex-direction: column;
    width: 100%; /* Give the container full width to make sure items inside it take up space */
}

.legend-item {
    display: flex;
    align-items: center; /* Align items to the center of the .legend-item flex container */
    justify-content: flex-start; /* This ensures the items start from the left */
    margin-right: 10px;
    width: 100%; /* Make the .legend-item take the full width of the .legend */
}

.stick-line {
    width: 40px;
    height: 10px;
    margin-right: 5px;
}

.green-line {
    background-color: green;
}

.orange-line {
    background-color: #ffa500;
}

.red-line {
    background-color: red;
}

.close-button {
    display: none;
}

#my-gui-container-1 {
    position: relative;
}

#my-gui-container-1 > div {
    position: absolute;
    top: 100;
    right: 100;
}

.my-gui-container-container {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.my-gui-container {
    /* height: 170px; */
    width: 280px;
    height: 100%;
}

#gui-1,
#gui-2,
#gui-3 {
    position: absolute;
    top: 10%;
}

.my-gui-container {
    display: none;
}

.radio-efc:checked + .content-efc .my-gui-container {
    display: block;
}

.gui-title {
    font-size: 16px;
    color: white;
    background-color: #222;
    padding: 5px 10px;
    text-shadow: 0;
    /* add any other styles as desired */
}

/* Style for the container holding the three gui-containers */
/* .gui-containers {
    display: flex;
    justify-content: space-between; 
    margin-top: 100px; 
} */

/* Styling each .model container to take up equal width */
.model {
    margin-bottom: 30px; /* adjust as needed */
    flex: 1; /* This ensures each .model takes up equal space */
    margin: 0 5px; /* Gives a small gap between each container */
    box-sizing: border-box; /* This ensures padding and borders are included in total width/height */
}

/* You can add more specific styles for the individual GUI containers if needed */
#my-gui-container-1,
#my-gui-container-2,
#my-gui-container-3 {
    padding: 1rem;
}
/* Container for the horizontal boxes */
.horizontal-boxes {
    display: flex; /* Flexbox layout */
    justify-content: space-between; /* Space out the boxes */
    margin-top: 20px; /* Space between the .model-box and the row of boxes. Adjust as needed */
    flex-basis: 75%; /* It occupies 75% of the parent's width */
    position: relative; /* So that we can align the canvas and model-box correctly */
    width: 100%; /* You can adjust this as needed */
}

/* Style for each individual box */
.box {
    flex: 1; /* Makes each box take up an equal amount of space */
    padding: 20px; /* Inner padding for each box. Adjust as needed */
    box-sizing: border-box; /* Ensures padding and borders are included in total width/height */
    text-align: center; /* Centers the content inside the box. Adjust as needed */
}

body,
html {
    margin: 0;
    width: 100%;
    height: 100%;
    background-color: black;
    color: white;
    overflow-x: hidden;
    max-width: 100%;
}

.container {
    display: flex;
    flex-wrap: wrap;
    width: 100vw;
    padding: 10px;
}

.main-box {
    width: 75vw;
    height: 37.5vw; /* half of the width */
    border: 1px solid black;
}

.small-box {
    width: 25vw;
    height: 25vw;
    border: 1px solid black;
}

/* Container to hold the canvas and the side box */
.container {
    display: flex;
    width: 100%;
    height: 500px; /* Example height, change as required */
}

.model-box {
    flex: 0 0 75%; /* It occupies 75% of the parent's width */
    border: 5px solid #eee;
    border-radius: 10px;
    padding: 2px; /* Remove padding if any */
    margin: 0; /* Remove margins to avoid space between boxes */
    margin-left: 1rem;
    /* box-shadow: 0 0 10px rgba(46, 161, 213, 1); */
}
.side-box {
    padding: inherit;
    border: 5px solid #eee;
    border-radius: 5px;
    padding: 2px;
    margin: 0;
    margin-left: 1rem;
    box-shadow: 0 0 10px rgba(46, 161, 213, 1);
}

.load-model-btn {
    color: black;
    border-color: #888;
    background-color: #aaa;
    border-radius: 5px;
    padding: 8px;
}

.fixed-width-height-div {
    height: 170px;
    width: 320px;
    margin: 1rem;
}

.general-container-efc {
    display: flex;
    height: 100%;
    /* margin: 0 auto; */
    /* max-width: 85%; */
    /* width: 85%; */
    /* box shadow */
}

.radio-efc {
    display: none;
}

.content-efc {
    background: #191919 100% / cover no-repeat;
    border-radius: 1rem;
    border: 3px solid #aaa;
    cursor: pointer;
    flex: 1;
    margin-right: 0.8rem;
    overflow: hidden;
    position: relative;
    transition: all 0.5s cubic-bezier(0.05, 0.61, 0.41, 0.95);
    /* transition-property: flex, border-radius, box-shadow; */
}

.content-efc:hover {
    box-shadow: 0.3rem 0.3rem 0.4rem rgba(0, 0, 0, 0.3);
}

/* .content:nth-of-type(2) {
}

.content:nth-of-type(3) {
}

.content:nth-of-type(4) {
}

.content:nth-of-type(5) {
} */

.card-title-efc {
    bottom: 2rem;
    color: #aaa;
    display: flex;
    flex-direction: column;
    font-size: 1.2rem;
    left: 10%; /* centering the title horizontally */
    transform-origin: 50% 50%; /* setting the pivot for rotation */
    transform: rotate(-90deg) translateY(-50%); /* rotating and positioning */
    line-height: 1.1;
    /*   opacity: 0; */
    position: absolute;
    text-shadow: 0.05rem 0.05rem 0.1rem rgba(0, 0, 0, 0.5);
    transition: 290ms cubic-bezier(0.05, 0.61, 0.41, 0.95) 300ms;
    transition-property: opacity, transform;
    user-select: none;
    white-space: nowrap;
}

/* Effect */
.radio-efc:checked + .content-efc {
    border-radius: 2rem;
    /* box-shadow: 0.3rem 0.3rem 0.4rem rgba(0, 0, 0, 0.3); */
    flex: 10;
    border: 5px solid #fff;
    /* box-shadow: 0 0 10px rgba(46, 161, 213, 1); */
}

.radio-efc:checked + .content-efc > .card-title-efc {
    opacity: 1;
    transform: translateX(0);
    bottom: 0rem;
    color: #fff;
    font-weight: bold;
}

.active {
    border-color: #ccc;
    background-color: #eee;
}

.webgl {
    width: 100%;
    height: 100%;
    display: block; /* Block display to occupy full space of its container */
}

.instructions {
    padding-top: 2rem;
}

.details-box {
    padding: 5px;
    width: 100%;
}
.small-superscript {
    font-size: 70%; /* This makes it half its original size */
    vertical-align: super; /* This ensures it remains in the superscript position */
}

.top-content,
.bottom-content {
    padding: 10px;
    overflow: auto;
}

.top-content {
    flex: 4;
    border-bottom: 1px solid #ccc;
}

.bottom-content {
    flex: 1;
}

body,
html {
    margin: 0;
    padding: 0;
    width: 100%;
    height: 100%;
}

.main-box {
    width: 75vw;
    height: 37.5vw; /* half of the width */
    border: 1px solid black;
    /* box-shadow: 0 0 10px rgba(46, 161, 213, 1); */
    border-radius: 10px;
}

.small-box {
    width: 25vw;
    height: 25vw;
    border: 1px solid black;
}

.canvas-sliders-box {
    padding: 10px; /* Adjust as needed */
    background-color: #e5e5e5; /* Base color */

    /* You can play around with these values to achieve the desired bevel depth and direction */
    border: 1px solid #b0b0b0;
    box-shadow: 2px 2px 4px #b0b0b0, -2px -2px 4px #fff;

    /* Adding some border radius can enhance the bevelled look */
    border-radius: 5px;

    /* Optionally, you can also use a gradient background for more depth */
    background: linear-gradient(135deg, #e5e5e5, #d0d0d0);
}

/* If you want to add interactivity, you can also add a hover effect */
.canvas-sliders-box:hover {
    background: linear-gradient(135deg, #d0d0d0, #e5e5e5);
}

.my-container {
    display: flex;
    flex-direction: column;
}

#canvas-box,
#slider-box,
#details-box {
    /* padding: 10px; */
}
/* Other existing styles continue here */
/* Desktop view */
@media (min-width: 768px) {
    .my-container {
        flex-direction: row;
    }

    .fixed-width-height-div {
        height: 220px;
        width: 420px;
    }

    #general-container-efc {
        order: 2;
    }
    #details-box {
        order: 1;
    }

    #slider-box {
        width: auto;
    }
}

@media (max-width: 414px) {
}
